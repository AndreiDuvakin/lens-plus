"""убрал таблицу связывающую линзы и наборы

Revision ID: 429c0003ac73
Revises: e2c127e2d330
Create Date: 2025-02-27 10:49:13.829256

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '429c0003ac73'
down_revision: Union[str, None] = 'e2c127e2d330'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('set_lens')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('set_lens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('set_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lens_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['lens_id'], ['lens.id'], name='set_lens_lens_id_fkey'),
    sa.ForeignKeyConstraint(['set_id'], ['sets.id'], name='set_lens_set_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='set_lens_pkey'),
    sa.UniqueConstraint('lens_id', name='set_lens_lens_id_key')
    )
    # ### end Alembic commands ###
